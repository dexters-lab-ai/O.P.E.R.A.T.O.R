/**
 * Copyright (c) 2025 Bytedance, Inc. and its affiliates.
 * SPDX-License-Identifier: Apache-2.0
 */
interface Message {
    from: 'gpt' | 'human';
    value: string;
}
type Status = `${StatusEnum}`;
declare enum StatusEnum {
    RUNNING = "running",
    END = "end",
    INIT = "init",
    MAX_LOOP = "max_loop"
}
interface VlmResponse {
    generate_resp: {
        input: string;
        prediction: string;
        uid: string;
    }[];
}
interface ScreenshotResult {
    base64: string;
    width: number;
    height: number;
}
type ActionInputs = Partial<Record<'content' | 'start_box' | 'end_box' | 'key' | 'hotkey' | 'direction', string>>;
interface PredictionParsed {
    action_inputs: ActionInputs;
    reflection?: string;
    action_type: string;
    thought: string;
}

export { type ActionInputs, type Message, type PredictionParsed, type ScreenshotResult, type Status, StatusEnum, type VlmResponse };
