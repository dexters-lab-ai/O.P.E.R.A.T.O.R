import { P as PageAgent } from './agent-ae5d08b8.js';
import { ScriptPlayerTaskStatus, ScriptPlayerStatusValue, MidsceneYamlScript, MidsceneYamlScriptEnv, FreeFn, MidsceneYamlFlowItem } from '@midscene/core';

declare class ScriptPlayer {
    private script;
    private setupAgent;
    onTaskStatusChange?: ((taskStatus: ScriptPlayerTaskStatus) => void) | undefined;
    currentTaskIndex?: number;
    taskStatusList: ScriptPlayerTaskStatus[];
    status: ScriptPlayerStatusValue;
    reportFile?: string | null;
    result: Record<string, any>;
    private unnamedResultIndex;
    output?: string | null;
    errorInSetup?: Error;
    private pageAgent;
    constructor(script: MidsceneYamlScript, setupAgent: (target: MidsceneYamlScriptEnv) => Promise<{
        agent: PageAgent;
        freeFn: FreeFn[];
    }>, onTaskStatusChange?: ((taskStatus: ScriptPlayerTaskStatus) => void) | undefined);
    private setPlayerStatus;
    private notifyCurrentTaskStatusChange;
    private setTaskStatus;
    private setTaskIndex;
    private flushResult;
    playTask(taskStatus: ScriptPlayerTaskStatus, agent: PageAgent): Promise<void>;
    run(): Promise<void>;
}

declare function parseYamlScript(content: string, filePath?: string, ignoreCheckingTarget?: boolean): MidsceneYamlScript;
declare const flowItemBrief: (flowItem?: MidsceneYamlFlowItem) => string;

export { ScriptPlayer as S, flowItemBrief as f, parseYamlScript as p };
