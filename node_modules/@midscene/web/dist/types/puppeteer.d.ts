import { P as PageAgent, a as PageAgentOpt } from './agent-3fa82650.js';
import { Page } from 'puppeteer';
export { a as PuppeteerWebPage } from './page-1f2132ee.js';
export { overrideAIConfig } from '@midscene/core/env';
import { MidsceneYamlScriptEnv } from '@midscene/core';
import '@midscene/core/ai-model';
import '@midscene/shared/fs';
import 'playwright';
import '@midscene/shared/extractor';
import '@midscene/shared/constants';
import 'webdriverio';

interface FreeFn {
    name: string;
    fn: () => void;
}
declare function puppeteerAgentForTarget(target: MidsceneYamlScriptEnv, preference?: {
    headed?: boolean;
    keepWindow?: boolean;
    testId?: string;
    cacheId?: string;
}): Promise<{
    agent: PuppeteerAgent;
    freeFn: FreeFn[];
}>;

declare class PuppeteerAgent extends PageAgent {
    constructor(page: Page, opts?: PageAgentOpt);
}

export { PuppeteerAgent, puppeteerAgentForTarget };
