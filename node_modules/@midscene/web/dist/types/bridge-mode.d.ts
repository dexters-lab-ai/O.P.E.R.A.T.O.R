import { P as PageAgent, a as PageAgentOpt } from './agent-3fa82650.js';
import { B as BridgeConnectTabOptions, E as ExtensionBridgePageBrowserSide } from './browser-178b6a27.js';
export { overrideAIConfig } from '@midscene/core/env';
import '@midscene/core';
import './page-1f2132ee.js';
import 'playwright';
import '@midscene/shared/extractor';
import 'puppeteer';
import '@midscene/shared/constants';
import 'webdriverio';
import '@midscene/core/ai-model';
import '@midscene/shared/fs';

interface ChromeExtensionPageCliSide extends ExtensionBridgePageBrowserSide {
    showStatusMessage: (message: string) => Promise<void>;
}
declare class AgentOverChromeBridge extends PageAgent<ChromeExtensionPageCliSide> {
    private destroyAfterDisconnectFlag?;
    constructor(opts?: PageAgentOpt & {
        closeNewTabsAfterDisconnect?: boolean;
    });
    setDestroyOptionsAfterConnect(): Promise<void>;
    connectNewTabWithUrl(url: string, options?: BridgeConnectTabOptions): Promise<void>;
    connectCurrentTab(options?: BridgeConnectTabOptions): Promise<void>;
    aiAction(prompt: string, options?: any): Promise<void>;
    destroy(closeNewTabsAfterDisconnect?: boolean): Promise<void>;
}

export { AgentOverChromeBridge };
